name: Code testing with automated build checks and unit tests 
 
on:
  push:
   # branches: [ "master" ]
  pull_request:
   # branches: [ "master" ]

jobs:
#Running the unit tests on the application
  APPLICATION_TESTING: 
  
    runs-on: ubuntu-latest
    env:                                             #environment variables
      PASSWORD: ${{ secrets.APP_PASS }}
      PUBLIC_IP_ADDRESS: ${{ secrets.APP_DB_IP }}
      DBNAME: ${{ secrets.APP_TEST_DB }}
      PROJECT_ID: ${{ secrets.APP_PROJECT_ID }}
      INSTANCE_NAME: ${{ secrets.APP_DB_INSTANCE }}
      
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt            #installing rquirements using pip
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest testt.py --junitxml=pytest-results.xml    #Runing unit test and getting output in xml file
        
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2                   #Uploading the artifact
      with:
        name: artifacts
        path: |
          Artifact/ 


# Custome action for building, testing and publishing the package.    
        
  USING_CUSTOM_ACTION:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v3
   

    - name: Build,Test and Publish Docker Image
      uses: ./.github/actions                                 #Calling the custom action
      with:                                                   #Passing values to Custom action
        APP_PASS: ${{ secrets.APP_PASS }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APP_DB_IP: ${{ secrets.APP_DB_IP }}
        APP_TEST_DB: ${{ secrets.APP_TEST_DB }}
        APP_PROJECT_ID: ${{ secrets.APP_PROJECT_ID }}
        APP_DB_INSTANCE: ${{ secrets.APP_DB_INSTANCE }}
